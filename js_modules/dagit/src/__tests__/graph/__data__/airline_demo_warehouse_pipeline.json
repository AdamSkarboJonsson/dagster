{"data":{"pipelineOrError":{"name":"airline_demo_warehouse_pipeline","description":null,"modes":[{"name":"local","description":null,"resources":[{"name":"db_info","description":null,"configField":{"configType":{"key":"Dict.44","name":null,"description":"A configuration dictionary with typed fields","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[{"key":"String","name":"String","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]}],"fields":[{"name":"postgres_db_name","description":null,"isOptional":false,"configType":{"key":"String"}},{"name":"postgres_hostname","description":null,"isOptional":false,"configType":{"key":"String"}},{"name":"postgres_password","description":null,"isOptional":false,"configType":{"key":"String"}},{"name":"postgres_username","description":null,"isOptional":false,"configType":{"key":"String"}}]}}},{"name":"file_cache","description":null,"configField":{"configType":{"key":"Dict.36","name":null,"description":"A configuration dictionary with typed fields","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[{"key":"String","name":"String","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]},{"key":"Bool","name":"Bool","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]}],"fields":[{"name":"overwrite","description":null,"isOptional":true,"configType":{"key":"Bool"}},{"name":"target_folder","description":null,"isOptional":false,"configType":{"key":"String"}}]}}},{"name":"s3","description":null,"configField":{"configType":{"key":"Dict.38","name":null,"description":"A configuration dictionary with typed fields","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[{"key":"Bool","name":"Bool","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]}],"fields":[{"name":"use_unsigned_session","description":"Specifies whether to use an unsigned S3 session","isOptional":true,"configType":{"key":"Bool"}}]}}},{"name":"spark","description":null,"configField":null},{"name":"tempfile","description":null,"configField":null}],"loggers":[{"name":"console","description":"The default colored console logger.","configField":{"configType":{"key":"Dict.25","name":null,"description":"A configuration dictionary with typed fields","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[{"key":"String","name":"String","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]}],"fields":[{"name":"log_level","description":null,"isOptional":true,"configType":{"key":"String"}},{"name":"name","description":null,"isOptional":true,"configType":{"key":"String"}}]}}}]},{"name":"prod","description":null,"resources":[{"name":"db_info","description":null,"configField":{"configType":{"key":"Dict.43","name":null,"description":"A configuration dictionary with typed fields","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[{"key":"String","name":"String","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]}],"fields":[{"name":"redshift_db_name","description":null,"isOptional":false,"configType":{"key":"String"}},{"name":"redshift_hostname","description":null,"isOptional":false,"configType":{"key":"String"}},{"name":"redshift_password","description":null,"isOptional":false,"configType":{"key":"String"}},{"name":"redshift_username","description":null,"isOptional":false,"configType":{"key":"String"}},{"name":"s3_temp_dir","description":null,"isOptional":false,"configType":{"key":"String"}}]}}},{"name":"file_cache","description":null,"configField":{"configType":{"key":"Dict.37","name":null,"description":"A configuration dictionary with typed fields","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[{"key":"String","name":"String","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]},{"key":"Bool","name":"Bool","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]}],"fields":[{"name":"bucket","description":null,"isOptional":false,"configType":{"key":"String"}},{"name":"key","description":null,"isOptional":false,"configType":{"key":"String"}},{"name":"overwrite","description":null,"isOptional":true,"configType":{"key":"Bool"}}]}}},{"name":"s3","description":null,"configField":{"configType":{"key":"Dict.38","name":null,"description":"A configuration dictionary with typed fields","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[{"key":"Bool","name":"Bool","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]}],"fields":[{"name":"use_unsigned_session","description":"Specifies whether to use an unsigned S3 session","isOptional":true,"configType":{"key":"Bool"}}]}}},{"name":"spark","description":null,"configField":null},{"name":"tempfile","description":null,"configField":null}],"loggers":[{"name":"console","description":"The default colored console logger.","configField":{"configType":{"key":"Dict.25","name":null,"description":"A configuration dictionary with typed fields","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[{"key":"String","name":"String","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]}],"fields":[{"name":"log_level","description":null,"isOptional":true,"configType":{"key":"String"}},{"name":"name","description":null,"isOptional":true,"configType":{"key":"String"}}]}}}]},{"name":"test","description":null,"resources":[{"name":"db_info","description":null,"configField":{"configType":{"key":"Dict.43","name":null,"description":"A configuration dictionary with typed fields","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[{"key":"String","name":"String","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]}],"fields":[{"name":"redshift_db_name","description":null,"isOptional":false,"configType":{"key":"String"}},{"name":"redshift_hostname","description":null,"isOptional":false,"configType":{"key":"String"}},{"name":"redshift_password","description":null,"isOptional":false,"configType":{"key":"String"}},{"name":"redshift_username","description":null,"isOptional":false,"configType":{"key":"String"}},{"name":"s3_temp_dir","description":null,"isOptional":false,"configType":{"key":"String"}}]}}},{"name":"file_cache","description":null,"configField":{"configType":{"key":"Dict.36","name":null,"description":"A configuration dictionary with typed fields","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[{"key":"String","name":"String","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]},{"key":"Bool","name":"Bool","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]}],"fields":[{"name":"overwrite","description":null,"isOptional":true,"configType":{"key":"Bool"}},{"name":"target_folder","description":null,"isOptional":false,"configType":{"key":"String"}}]}}},{"name":"s3","description":null,"configField":{"configType":{"key":"Dict.38","name":null,"description":"A configuration dictionary with typed fields","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[{"key":"Bool","name":"Bool","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]}],"fields":[{"name":"use_unsigned_session","description":"Specifies whether to use an unsigned S3 session","isOptional":true,"configType":{"key":"Bool"}}]}}},{"name":"spark","description":null,"configField":null},{"name":"tempfile","description":null,"configField":null}],"loggers":[{"name":"console","description":"The default colored console logger.","configField":{"configType":{"key":"Dict.25","name":null,"description":"A configuration dictionary with typed fields","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[{"key":"String","name":"String","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]}],"fields":[{"name":"log_level","description":null,"isOptional":true,"configType":{"key":"String"}},{"name":"name","description":null,"isOptional":true,"configType":{"key":"String"}}]}}}]}],"solids":[{"name":"average_sfo_outbound_avg_delays_by_destination"},{"name":"delays_vs_fares"},{"name":"fares_vs_delays"},{"name":"process_delays_by_geo"},{"name":"q2_sfo_outbound_flights"},{"name":"sfo_delays_by_destination"},{"name":"tickets_with_destination"},{"name":"upload_delays_vs_fares_pdf_plots"},{"name":"upload_outbound_avg_delay_pdf_plots"}],"solidHandles":[{"handleID":"average_sfo_outbound_avg_delays_by_destination","parent":null,"solid":{"name":"average_sfo_outbound_avg_delays_by_destination","definition":{"name":"average_sfo_outbound_avg_delays_by_destination","__typename":"SolidDefinition","metadata":[{"key":"kind","value":"sql"},{"key":"sql","value":"drop table if exists average_sfo_outbound_avg_delays_by_destination;\ncreate table average_sfo_outbound_avg_delays_by_destination as \n    select\n        cast(cast(arrdelay as float) as integer) as arrival_delay,\n        cast(cast(depdelay as float) as integer) as departure_delay,\n        origin,\n        dest as destination\n    from q2_sfo_outbound_flights\n    ;"}],"configDefinition":null,"description":"This solid executes the following SQL statement:\n    \n    select\n        cast(cast(arrdelay as float) as integer) as arrival_delay,\n        cast(cast(depdelay as float) as integer) as departure_delay,\n        origin,\n        dest as destination\n    from q2_sfo_outbound_flights\n    ","requiredResources":[]},"inputs":[{"definition":{"name":"q2_sfo_outbound_flights","type":{"displayName":"SqlTableName","name":"SqlTableName","description":"The name of a database table"},"description":null},"dependsOn":[{"definition":{"name":"result","type":{"displayName":"SqlTableName"}},"solid":{"name":"q2_sfo_outbound_flights"}}]}],"outputs":[{"definition":{"name":"result","type":{"displayName":"SqlTableName","name":"SqlTableName","description":"The name of a database table"},"description":"The string name of the new table created by the solid"},"dependedBy":[{"solid":{"name":"delays_vs_fares"},"definition":{"name":"average_sfo_outbound_avg_delays_by_destination","type":{"displayName":"SqlTableName"}}},{"solid":{"name":"sfo_delays_by_destination"},"definition":{"name":"table_name","type":{"displayName":"SqlTableName"}}}]}]}},{"handleID":"delays_vs_fares","parent":null,"solid":{"name":"delays_vs_fares","definition":{"name":"delays_vs_fares","__typename":"SolidDefinition","metadata":[{"key":"kind","value":"sql"},{"key":"sql","value":"drop table if exists delays_vs_fares;\ncreate table delays_vs_fares as \n    with avg_fares as (\n        select\n            tickets.origin,\n            tickets.dest,\n            avg(cast(tickets.itinfare as float)) as avg_fare,\n            avg(cast(tickets.farepermile as float)) as avg_fare_per_mile\n        from tickets_with_destination as tickets\n        where origin = 'SFO'\n        group by (tickets.origin, tickets.dest)\n    )\n    select\n        avg_fares.*,\n        avg(avg_delays.arrival_delay) as avg_arrival_delay,\n        avg(avg_delays.departure_delay) as avg_departure_delay\n    from\n        avg_fares,\n        average_sfo_outbound_avg_delays_by_destination as avg_delays\n    where\n        avg_fares.origin = avg_delays.origin and\n        avg_fares.dest = avg_delays.destination\n    group by (\n        avg_fares.avg_fare,\n        avg_fares.avg_fare_per_mile,\n        avg_fares.origin,\n        avg_delays.origin,\n        avg_fares.dest,\n        avg_delays.destination\n    )\n    ;"}],"configDefinition":null,"description":"This solid executes the following SQL statement:\n    \n    with avg_fares as (\n        select\n            tickets.origin,\n            tickets.dest,\n            avg(cast(tickets.itinfare as float)) as avg_fare,\n            avg(cast(tickets.farepermile as float)) as avg_fare_per_mile\n        from tickets_with_destination as tickets\n        where origin = 'SFO'\n        group by (tickets.origin, tickets.dest)\n    )\n    select\n        avg_fares.*,\n        avg(avg_delays.arrival_delay) as avg_arrival_delay,\n        avg(avg_delays.departure_delay) as avg_departure_delay\n    from\n        avg_fares,\n        average_sfo_outbound_avg_delays_by_destination as avg_delays\n    where\n        avg_fares.origin = avg_delays.origin and\n        avg_fares.dest = avg_delays.destination\n    group by (\n        avg_fares.avg_fare,\n        avg_fares.avg_fare_per_mile,\n        avg_fares.origin,\n        avg_delays.origin,\n        avg_fares.dest,\n        avg_delays.destination\n    )\n    ","requiredResources":[]},"inputs":[{"definition":{"name":"tickets_with_destination","type":{"displayName":"SqlTableName","name":"SqlTableName","description":"The name of a database table"},"description":null},"dependsOn":[{"definition":{"name":"result","type":{"displayName":"SqlTableName"}},"solid":{"name":"tickets_with_destination"}}]},{"definition":{"name":"average_sfo_outbound_avg_delays_by_destination","type":{"displayName":"SqlTableName","name":"SqlTableName","description":"The name of a database table"},"description":null},"dependsOn":[{"definition":{"name":"result","type":{"displayName":"SqlTableName"}},"solid":{"name":"average_sfo_outbound_avg_delays_by_destination"}}]}],"outputs":[{"definition":{"name":"result","type":{"displayName":"SqlTableName","name":"SqlTableName","description":"The name of a database table"},"description":"The string name of the new table created by the solid"},"dependedBy":[{"solid":{"name":"fares_vs_delays"},"definition":{"name":"table_name","type":{"displayName":"SqlTableName"}}}]}]}},{"handleID":"fares_vs_delays","parent":null,"solid":{"name":"fares_vs_delays","definition":{"name":"fares_vs_delays","__typename":"SolidDefinition","metadata":[{"key":"notebook_path","value":"/Users/bengotow/Work/F376/Projects/dagster/examples/dagster_examples/airline_demo/notebooks/Fares_vs_Delays.ipynb"},{"key":"kind","value":"ipynb"}],"configDefinition":null,"description":"This solid is backed by the notebook at /Users/bengotow/Work/F376/Projects/dagster/examples/dagster_examples/airline_demo/notebooks/Fares_vs_Delays.ipynb","requiredResources":[]},"inputs":[{"definition":{"name":"table_name","type":{"displayName":"SqlTableName","name":"SqlTableName","description":"The name of a database table"},"description":"The SQL table to use for calcuations."},"dependsOn":[{"definition":{"name":"result","type":{"displayName":"SqlTableName"}},"solid":{"name":"delays_vs_fares"}}]}],"outputs":[{"definition":{"name":"result","type":{"displayName":"FileHandle","name":"FileHandle","description":"A file handle a reference to a file, which could be resident in the local file\n    system, an object store, or any arbitrary place where file can be stored.\n\n    This exists to handle the very common case where you wish to write a computation that reads,\n    transforms, and writes files, but is written in a way where the same code could work in local\n    developement as well as in a cluster where the files would be stored in globally available\n    object store such as s3.\n    "},"description":"The path to the saved PDF plots."},"dependedBy":[{"solid":{"name":"upload_delays_vs_fares_pdf_plots"},"definition":{"name":"file_handle","type":{"displayName":"FileHandle"}}}]}]}},{"handleID":"process_delays_by_geo","parent":null,"solid":{"name":"process_delays_by_geo","definition":{"name":"process_delays_by_geo","__typename":"CompositeSolidDefinition","metadata":[],"inputMappings":[],"outputMappings":[{"definition":{"name":"result"},"mappedOutput":{"definition":{"name":"s3_file_handle"},"solid":{"name":"upload_delays_by_geography_pdf_plots"}}}],"description":null,"requiredResources":[]},"inputs":[],"outputs":[{"definition":{"name":"result","type":{"displayName":"FileHandle","name":"FileHandle","description":"A file handle a reference to a file, which could be resident in the local file\n    system, an object store, or any arbitrary place where file can be stored.\n\n    This exists to handle the very common case where you wish to write a computation that reads,\n    transforms, and writes files, but is written in a way where the same code could work in local\n    developement as well as in a cluster where the files would be stored in globally available\n    object store such as s3.\n    "},"description":null},"dependedBy":[]}]}},{"handleID":"process_delays_by_geo.delays_by_geography","parent":{"handleID":"process_delays_by_geo"},"solid":{"name":"delays_by_geography","definition":{"name":"delays_by_geography","__typename":"SolidDefinition","metadata":[{"key":"notebook_path","value":"/Users/bengotow/Work/F376/Projects/dagster/examples/dagster_examples/airline_demo/notebooks/Delays_by_Geography.ipynb"},{"key":"kind","value":"ipynb"}],"configDefinition":null,"description":"This solid is backed by the notebook at /Users/bengotow/Work/F376/Projects/dagster/examples/dagster_examples/airline_demo/notebooks/Delays_by_Geography.ipynb","requiredResources":[]},"inputs":[{"definition":{"name":"westbound_delays","type":{"displayName":"SqlTableName","name":"SqlTableName","description":"The name of a database table"},"description":"The SQL table containing westbound delays."},"dependsOn":[{"definition":{"name":"result","type":{"displayName":"SqlTableName"}},"solid":{"name":"westbound_delays"}}]},{"definition":{"name":"eastbound_delays","type":{"displayName":"SqlTableName","name":"SqlTableName","description":"The name of a database table"},"description":"The SQL table containing eastbound delays."},"dependsOn":[{"definition":{"name":"result","type":{"displayName":"SqlTableName"}},"solid":{"name":"eastbound_delays"}}]}],"outputs":[{"definition":{"name":"result","type":{"displayName":"FileHandle","name":"FileHandle","description":"A file handle a reference to a file, which could be resident in the local file\n    system, an object store, or any arbitrary place where file can be stored.\n\n    This exists to handle the very common case where you wish to write a computation that reads,\n    transforms, and writes files, but is written in a way where the same code could work in local\n    developement as well as in a cluster where the files would be stored in globally available\n    object store such as s3.\n    "},"description":"The saved PDF plots."},"dependedBy":[{"solid":{"name":"upload_delays_by_geography_pdf_plots"},"definition":{"name":"file_handle","type":{"displayName":"FileHandle"}}}]}]}},{"handleID":"process_delays_by_geo.eastbound_delays","parent":{"handleID":"process_delays_by_geo"},"solid":{"name":"eastbound_delays","definition":{"name":"eastbound_delays","__typename":"SolidDefinition","metadata":[{"key":"kind","value":"sql"},{"key":"sql","value":"drop table if exists eastbound_delays;\ncreate table eastbound_delays as \n    select\n        avg(cast(cast(arrdelay as float) as integer)) as avg_arrival_delay,\n        avg(cast(cast(depdelay as float) as integer)) as avg_departure_delay,\n        origin,\n        dest as destination,\n        count(1) as num_flights,\n        avg(cast(dest_latitude as float)) as dest_latitude,\n        avg(cast(dest_longitude as float)) as dest_longitude,\n        avg(cast(origin_latitude as float)) as origin_latitude,\n        avg(cast(origin_longitude as float)) as origin_longitude\n    from q2_on_time_data\n    where\n        cast(origin_longitude as float) < cast(dest_longitude as float) and\n        originstate != 'HI' and\n        deststate != 'HI' and\n        originstate != 'AK' and\n        deststate != 'AK'\n    group by (origin,destination)\n    order by num_flights desc\n    limit 100;\n    ;"}],"configDefinition":null,"description":"This solid executes the following SQL statement:\n    \n    select\n        avg(cast(cast(arrdelay as float) as integer)) as avg_arrival_delay,\n        avg(cast(cast(depdelay as float) as integer)) as avg_departure_delay,\n        origin,\n        dest as destination,\n        count(1) as num_flights,\n        avg(cast(dest_latitude as float)) as dest_latitude,\n        avg(cast(dest_longitude as float)) as dest_longitude,\n        avg(cast(origin_latitude as float)) as origin_latitude,\n        avg(cast(origin_longitude as float)) as origin_longitude\n    from q2_on_time_data\n    where\n        cast(origin_longitude as float) < cast(dest_longitude as float) and\n        originstate != 'HI' and\n        deststate != 'HI' and\n        originstate != 'AK' and\n        deststate != 'AK'\n    group by (origin,destination)\n    order by num_flights desc\n    limit 100;\n    ","requiredResources":[]},"inputs":[],"outputs":[{"definition":{"name":"result","type":{"displayName":"SqlTableName","name":"SqlTableName","description":"The name of a database table"},"description":"The string name of the new table created by the solid"},"dependedBy":[{"solid":{"name":"delays_by_geography"},"definition":{"name":"eastbound_delays","type":{"displayName":"SqlTableName"}}}]}]}},{"handleID":"process_delays_by_geo.upload_delays_by_geography_pdf_plots","parent":{"handleID":"process_delays_by_geo"},"solid":{"name":"upload_delays_by_geography_pdf_plots","definition":{"name":"file_handle_to_s3","__typename":"SolidDefinition","metadata":[],"configDefinition":{"configType":{"name":null,"description":"A configuration dictionary with typed fields","key":"Dict.40","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[{"key":"String","name":"String","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]}],"fields":[{"name":"Bucket","description":"The name of the bucket to upload to.","isOptional":false,"configType":{"key":"String"}},{"name":"Key","description":"The name of the key to upload to.","isOptional":false,"configType":{"key":"String"}}]}},"description":"Take a file handle and upload it to s3. Returns an S3FileHandle.","requiredResources":[]},"inputs":[{"definition":{"name":"file_handle","type":{"displayName":"FileHandle","name":"FileHandle","description":"A file handle a reference to a file, which could be resident in the local file\n    system, an object store, or any arbitrary place where file can be stored.\n\n    This exists to handle the very common case where you wish to write a computation that reads,\n    transforms, and writes files, but is written in a way where the same code could work in local\n    developement as well as in a cluster where the files would be stored in globally available\n    object store such as s3.\n    "},"description":"The file to upload."},"dependsOn":[{"definition":{"name":"result","type":{"displayName":"FileHandle"}},"solid":{"name":"delays_by_geography"}}]}],"outputs":[{"definition":{"name":"s3_file_handle","type":{"displayName":"FileHandle","name":"FileHandle","description":"A file handle a reference to a file, which could be resident in the local file\n    system, an object store, or any arbitrary place where file can be stored.\n\n    This exists to handle the very common case where you wish to write a computation that reads,\n    transforms, and writes files, but is written in a way where the same code could work in local\n    developement as well as in a cluster where the files would be stored in globally available\n    object store such as s3.\n    "},"description":null},"dependedBy":[]}]}},{"handleID":"process_delays_by_geo.westbound_delays","parent":{"handleID":"process_delays_by_geo"},"solid":{"name":"westbound_delays","definition":{"name":"westbound_delays","__typename":"SolidDefinition","metadata":[{"key":"kind","value":"sql"},{"key":"sql","value":"drop table if exists westbound_delays;\ncreate table westbound_delays as \n    select\n        avg(cast(cast(arrdelay as float) as integer)) as avg_arrival_delay,\n        avg(cast(cast(depdelay as float) as integer)) as avg_departure_delay,\n        origin,\n        dest as destination,\n        count(1) as num_flights,\n        avg(cast(dest_latitude as float)) as dest_latitude,\n        avg(cast(dest_longitude as float)) as dest_longitude,\n        avg(cast(origin_latitude as float)) as origin_latitude,\n        avg(cast(origin_longitude as float)) as origin_longitude\n    from q2_on_time_data\n    where\n        cast(origin_longitude as float) > cast(dest_longitude as float) and\n        originstate != 'HI' and\n        deststate != 'HI' and\n        originstate != 'AK' and\n        deststate != 'AK'\n    group by (origin,destination)\n    order by num_flights desc\n    limit 100;\n    ;"}],"configDefinition":null,"description":"This solid executes the following SQL statement:\n    \n    select\n        avg(cast(cast(arrdelay as float) as integer)) as avg_arrival_delay,\n        avg(cast(cast(depdelay as float) as integer)) as avg_departure_delay,\n        origin,\n        dest as destination,\n        count(1) as num_flights,\n        avg(cast(dest_latitude as float)) as dest_latitude,\n        avg(cast(dest_longitude as float)) as dest_longitude,\n        avg(cast(origin_latitude as float)) as origin_latitude,\n        avg(cast(origin_longitude as float)) as origin_longitude\n    from q2_on_time_data\n    where\n        cast(origin_longitude as float) > cast(dest_longitude as float) and\n        originstate != 'HI' and\n        deststate != 'HI' and\n        originstate != 'AK' and\n        deststate != 'AK'\n    group by (origin,destination)\n    order by num_flights desc\n    limit 100;\n    ","requiredResources":[]},"inputs":[],"outputs":[{"definition":{"name":"result","type":{"displayName":"SqlTableName","name":"SqlTableName","description":"The name of a database table"},"description":"The string name of the new table created by the solid"},"dependedBy":[{"solid":{"name":"delays_by_geography"},"definition":{"name":"westbound_delays","type":{"displayName":"SqlTableName"}}}]}]}},{"handleID":"q2_sfo_outbound_flights","parent":null,"solid":{"name":"q2_sfo_outbound_flights","definition":{"name":"q2_sfo_outbound_flights","__typename":"SolidDefinition","metadata":[{"key":"kind","value":"sql"},{"key":"sql","value":"drop table if exists q2_sfo_outbound_flights;\ncreate table q2_sfo_outbound_flights as \n    select * from q2_on_time_data\n    where origin = 'SFO'\n    ;"}],"configDefinition":null,"description":"This solid executes the following SQL statement:\n    \n    select * from q2_on_time_data\n    where origin = 'SFO'\n    ","requiredResources":[]},"inputs":[],"outputs":[{"definition":{"name":"result","type":{"displayName":"SqlTableName","name":"SqlTableName","description":"The name of a database table"},"description":"The string name of the new table created by the solid"},"dependedBy":[{"solid":{"name":"average_sfo_outbound_avg_delays_by_destination"},"definition":{"name":"q2_sfo_outbound_flights","type":{"displayName":"SqlTableName"}}}]}]}},{"handleID":"sfo_delays_by_destination","parent":null,"solid":{"name":"sfo_delays_by_destination","definition":{"name":"sfo_delays_by_destination","__typename":"SolidDefinition","metadata":[{"key":"notebook_path","value":"/Users/bengotow/Work/F376/Projects/dagster/examples/dagster_examples/airline_demo/notebooks/SFO_Delays_by_Destination.ipynb"},{"key":"kind","value":"ipynb"}],"configDefinition":null,"description":"This solid is backed by the notebook at /Users/bengotow/Work/F376/Projects/dagster/examples/dagster_examples/airline_demo/notebooks/SFO_Delays_by_Destination.ipynb","requiredResources":[]},"inputs":[{"definition":{"name":"table_name","type":{"displayName":"SqlTableName","name":"SqlTableName","description":"The name of a database table"},"description":"The SQL table to use for calcuations."},"dependsOn":[{"definition":{"name":"result","type":{"displayName":"SqlTableName"}},"solid":{"name":"average_sfo_outbound_avg_delays_by_destination"}}]}],"outputs":[{"definition":{"name":"result","type":{"displayName":"FileHandle","name":"FileHandle","description":"A file handle a reference to a file, which could be resident in the local file\n    system, an object store, or any arbitrary place where file can be stored.\n\n    This exists to handle the very common case where you wish to write a computation that reads,\n    transforms, and writes files, but is written in a way where the same code could work in local\n    developement as well as in a cluster where the files would be stored in globally available\n    object store such as s3.\n    "},"description":"The path to the saved PDF plots."},"dependedBy":[{"solid":{"name":"upload_outbound_avg_delay_pdf_plots"},"definition":{"name":"file_handle","type":{"displayName":"FileHandle"}}}]}]}},{"handleID":"tickets_with_destination","parent":null,"solid":{"name":"tickets_with_destination","definition":{"name":"tickets_with_destination","__typename":"SolidDefinition","metadata":[{"key":"kind","value":"sql"},{"key":"sql","value":"drop table if exists tickets_with_destination;\ncreate table tickets_with_destination as \n    select\n        tickets.*,\n        coupons.dest,\n        coupons.destairportid,\n        coupons.destairportseqid, coupons.destcitymarketid,\n        coupons.destcountry,\n        coupons.deststatefips,\n        coupons.deststate,\n        coupons.deststatename,\n        coupons.destwac\n    from\n        q2_ticket_data as tickets,\n        q2_coupon_data as coupons\n    where\n        tickets.itinid = coupons.itinid;\n    ;"}],"configDefinition":null,"description":"This solid executes the following SQL statement:\n    \n    select\n        tickets.*,\n        coupons.dest,\n        coupons.destairportid,\n        coupons.destairportseqid, coupons.destcitymarketid,\n        coupons.destcountry,\n        coupons.deststatefips,\n        coupons.deststate,\n        coupons.deststatename,\n        coupons.destwac\n    from\n        q2_ticket_data as tickets,\n        q2_coupon_data as coupons\n    where\n        tickets.itinid = coupons.itinid;\n    ","requiredResources":[]},"inputs":[],"outputs":[{"definition":{"name":"result","type":{"displayName":"SqlTableName","name":"SqlTableName","description":"The name of a database table"},"description":"The string name of the new table created by the solid"},"dependedBy":[{"solid":{"name":"delays_vs_fares"},"definition":{"name":"tickets_with_destination","type":{"displayName":"SqlTableName"}}}]}]}},{"handleID":"upload_delays_vs_fares_pdf_plots","parent":null,"solid":{"name":"upload_delays_vs_fares_pdf_plots","definition":{"name":"file_handle_to_s3","__typename":"SolidDefinition","metadata":[],"configDefinition":{"configType":{"name":null,"description":"A configuration dictionary with typed fields","key":"Dict.40","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[{"key":"String","name":"String","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]}],"fields":[{"name":"Bucket","description":"The name of the bucket to upload to.","isOptional":false,"configType":{"key":"String"}},{"name":"Key","description":"The name of the key to upload to.","isOptional":false,"configType":{"key":"String"}}]}},"description":"Take a file handle and upload it to s3. Returns an S3FileHandle.","requiredResources":[]},"inputs":[{"definition":{"name":"file_handle","type":{"displayName":"FileHandle","name":"FileHandle","description":"A file handle a reference to a file, which could be resident in the local file\n    system, an object store, or any arbitrary place where file can be stored.\n\n    This exists to handle the very common case where you wish to write a computation that reads,\n    transforms, and writes files, but is written in a way where the same code could work in local\n    developement as well as in a cluster where the files would be stored in globally available\n    object store such as s3.\n    "},"description":"The file to upload."},"dependsOn":[{"definition":{"name":"result","type":{"displayName":"FileHandle"}},"solid":{"name":"fares_vs_delays"}}]}],"outputs":[{"definition":{"name":"s3_file_handle","type":{"displayName":"FileHandle","name":"FileHandle","description":"A file handle a reference to a file, which could be resident in the local file\n    system, an object store, or any arbitrary place where file can be stored.\n\n    This exists to handle the very common case where you wish to write a computation that reads,\n    transforms, and writes files, but is written in a way where the same code could work in local\n    developement as well as in a cluster where the files would be stored in globally available\n    object store such as s3.\n    "},"description":null},"dependedBy":[]}]}},{"handleID":"upload_outbound_avg_delay_pdf_plots","parent":null,"solid":{"name":"upload_outbound_avg_delay_pdf_plots","definition":{"name":"file_handle_to_s3","__typename":"SolidDefinition","metadata":[],"configDefinition":{"configType":{"name":null,"description":"A configuration dictionary with typed fields","key":"Dict.40","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[{"key":"String","name":"String","description":"","isList":false,"isNullable":false,"isSelector":false,"innerTypes":[]}],"fields":[{"name":"Bucket","description":"The name of the bucket to upload to.","isOptional":false,"configType":{"key":"String"}},{"name":"Key","description":"The name of the key to upload to.","isOptional":false,"configType":{"key":"String"}}]}},"description":"Take a file handle and upload it to s3. Returns an S3FileHandle.","requiredResources":[]},"inputs":[{"definition":{"name":"file_handle","type":{"displayName":"FileHandle","name":"FileHandle","description":"A file handle a reference to a file, which could be resident in the local file\n    system, an object store, or any arbitrary place where file can be stored.\n\n    This exists to handle the very common case where you wish to write a computation that reads,\n    transforms, and writes files, but is written in a way where the same code could work in local\n    developement as well as in a cluster where the files would be stored in globally available\n    object store such as s3.\n    "},"description":"The file to upload."},"dependsOn":[{"definition":{"name":"result","type":{"displayName":"FileHandle"}},"solid":{"name":"sfo_delays_by_destination"}}]}],"outputs":[{"definition":{"name":"s3_file_handle","type":{"displayName":"FileHandle","name":"FileHandle","description":"A file handle a reference to a file, which could be resident in the local file\n    system, an object store, or any arbitrary place where file can be stored.\n\n    This exists to handle the very common case where you wish to write a computation that reads,\n    transforms, and writes files, but is written in a way where the same code could work in local\n    developement as well as in a cluster where the files would be stored in globally available\n    object store such as s3.\n    "},"description":null},"dependedBy":[]}]}}]}}}