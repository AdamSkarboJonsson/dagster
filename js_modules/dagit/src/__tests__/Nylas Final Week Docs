Scheduling Project Technical Migration

Current Setup:
  + Heroku
  + Postgres database
  + Python 3.7.3
  + React + TypeScript

Services:
  + Flask + SQLAlchemy service that serves schedule.api.nylas.com.

  + Worker process that runs webhook / email delivery tasks
    + No separate queuing system, just polls Postgres and saves back
      success / retry counts, etc.

  + Flask service that serves schedule.nylas.com.
    + The content is almost entirely static - this tiny app just
      injects data from the API into React's `index.html` page so
      visitors get <title> and <meta> tags for Facebook and Twitter.

  + nylas-ui: Tiny bit of JS that customers will embed on their sites
    via a script tag to display the page management modal. Hand-written
    basic JS.

Testing:
  + High pytest coverage of business logic 
  + React snapshot testing of page management embed
  + Linting / autoformatting via pylint + black / Prettier

Monitoring / Reporting:
  + Sentry is already set up in Python + React, just need to change keys.
  + FullStory is tracking entire user sessions, may want to turn it off.
  + There isn't much logging in the app, just using `print`.
  + Probably want to integrate nylas tooling library and add better logging.

Documentation:
  + Swagger docs are autogenerated for the API (and we use them to synthesize
    TypeScript types in the React project.)
  + nylas-scheduling-beta repo:
    + Examples in python and node
    + Getting started guide
    + Documentation of page configuration options, webhook setup
  
Needs:
  + I think the plan is to move this project to Nylas infrastructure
    rather than Heroku. We need to move off Heroku to support custom
    domains because Heroku apps are identified by cname.
  
  + To make SSL work on scheduling pages mapped to custom domains, we
    need to integrate the schedule.nylas.com Flask service with the
    LetsEncrypt work the Nylas team did earlier this year.
  